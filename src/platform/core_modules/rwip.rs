pub use crate::bindings::{
    KE_API_ID as KeApiId, KE_API_ID_TASK_ID_ANCC as TASK_ID_ANCC,
    KE_API_ID_TASK_ID_ANPC as TASK_ID_ANPC, KE_API_ID_TASK_ID_ANPS as TASK_ID_ANPS,
    KE_API_ID_TASK_ID_APP as TASK_ID_APP, KE_API_ID_TASK_ID_BASC as TASK_ID_BASC,
    KE_API_ID_TASK_ID_BASS as TASK_ID_BASS, KE_API_ID_TASK_ID_BCSC as TASK_ID_BCSC,
    KE_API_ID_TASK_ID_BCSS as TASK_ID_BCSS, KE_API_ID_TASK_ID_BLPC as TASK_ID_BLPC,
    KE_API_ID_TASK_ID_BLPS as TASK_ID_BLPS, KE_API_ID_TASK_ID_BMSC as TASK_ID_BMSC,
    KE_API_ID_TASK_ID_BMSS as TASK_ID_BMSS, KE_API_ID_TASK_ID_CPPC as TASK_ID_CPPC,
    KE_API_ID_TASK_ID_CPPS as TASK_ID_CPPS, KE_API_ID_TASK_ID_CSCPC as TASK_ID_CSCPC,
    KE_API_ID_TASK_ID_CSCPS as TASK_ID_CSCPS, KE_API_ID_TASK_ID_CTSC as TASK_ID_CTSC,
    KE_API_ID_TASK_ID_CTSS as TASK_ID_CTSS, KE_API_ID_TASK_ID_CUSTS1 as TASK_ID_CUSTS1,
    KE_API_ID_TASK_ID_CUSTS2 as TASK_ID_CUSTS2, KE_API_ID_TASK_ID_DBG as TASK_ID_DBG,
    KE_API_ID_TASK_ID_DISC as TASK_ID_DISC, KE_API_ID_TASK_ID_DISPLAY as TASK_ID_DISPLAY,
    KE_API_ID_TASK_ID_DISS as TASK_ID_DISS, KE_API_ID_TASK_ID_FINDL as TASK_ID_FINDL,
    KE_API_ID_TASK_ID_FINDT as TASK_ID_FINDT, KE_API_ID_TASK_ID_GAPC as TASK_ID_GAPC,
    KE_API_ID_TASK_ID_GAPM as TASK_ID_GAPM, KE_API_ID_TASK_ID_GATTC as TASK_ID_GATTC,
    KE_API_ID_TASK_ID_GATTM as TASK_ID_GATTM, KE_API_ID_TASK_ID_GATT_CLIENT as TASK_ID_GATT_CLIENT,
    KE_API_ID_TASK_ID_GLPC as TASK_ID_GLPC, KE_API_ID_TASK_ID_GLPS as TASK_ID_GLPS,
    KE_API_ID_TASK_ID_GTL as TASK_ID_GTL, KE_API_ID_TASK_ID_HCI as TASK_ID_HCI,
    KE_API_ID_TASK_ID_HOGPBH as TASK_ID_HOGPBH, KE_API_ID_TASK_ID_HOGPD as TASK_ID_HOGPD,
    KE_API_ID_TASK_ID_HOGPRH as TASK_ID_HOGPRH, KE_API_ID_TASK_ID_HRPC as TASK_ID_HRPC,
    KE_API_ID_TASK_ID_HRPS as TASK_ID_HRPS, KE_API_ID_TASK_ID_HTPC as TASK_ID_HTPC,
    KE_API_ID_TASK_ID_HTPT as TASK_ID_HTPT, KE_API_ID_TASK_ID_INVALID as TASK_ID_INVALID,
    KE_API_ID_TASK_ID_L2CC as TASK_ID_L2CC, KE_API_ID_TASK_ID_LANC as TASK_ID_LANC,
    KE_API_ID_TASK_ID_LANS as TASK_ID_LANS, KE_API_ID_TASK_ID_LB as TASK_ID_LB,
    KE_API_ID_TASK_ID_LC as TASK_ID_LC, KE_API_ID_TASK_ID_LD as TASK_ID_LD,
    KE_API_ID_TASK_ID_LLC as TASK_ID_LLC, KE_API_ID_TASK_ID_LLD as TASK_ID_LLD,
    KE_API_ID_TASK_ID_LLM as TASK_ID_LLM, KE_API_ID_TASK_ID_LM as TASK_ID_LM,
    KE_API_ID_TASK_ID_PASPC as TASK_ID_PASPC, KE_API_ID_TASK_ID_PASPS as TASK_ID_PASPS,
    KE_API_ID_TASK_ID_PROXM as TASK_ID_PROXM, KE_API_ID_TASK_ID_PROXR as TASK_ID_PROXR,
    KE_API_ID_TASK_ID_RSCPC as TASK_ID_RSCPC, KE_API_ID_TASK_ID_RSCPS as TASK_ID_RSCPS,
    KE_API_ID_TASK_ID_SCPPC as TASK_ID_SCPPC, KE_API_ID_TASK_ID_SCPPS as TASK_ID_SCPPS,
    KE_API_ID_TASK_ID_SUOTAR as TASK_ID_SUOTAR, KE_API_ID_TASK_ID_TIPC as TASK_ID_TIPC,
    KE_API_ID_TASK_ID_TIPS as TASK_ID_TIPS, KE_API_ID_TASK_ID_UDSC as TASK_ID_UDSC,
    KE_API_ID_TASK_ID_UDSS as TASK_ID_UDSS, KE_API_ID_TASK_ID_WSSC as TASK_ID_WSSC,
    KE_API_ID_TASK_ID_WSSS as TASK_ID_WSSS, KE_MEM_ATT_DB, KE_MEM_ENV, KE_MEM_KE_MSG,
    KE_MEM_NON_RETENTION, KE_TASK_TYPE as KeTaskType, KE_TASK_TYPE_TASK_APP as TASK_APP,
    KE_TASK_TYPE_TASK_GAPC as TASK_GAPC, KE_TASK_TYPE_TASK_GAPM as TASK_GAPM,
};

#[inline]
pub fn rwip_schedule() {
    unsafe {
        crate::bindings::rwip_schedule();
    }
}
